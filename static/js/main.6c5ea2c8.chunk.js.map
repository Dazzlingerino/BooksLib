{"version":3,"sources":["reportWebVitals.js","components/EditModal.js","components/BooksList.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles2","makeStyles","theme","modal","display","alignItems","justifyContent","paper","height","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","EditModal","open","book","onSave","onCancel","classes","useState","Title","title","setTitle","Author","author","setAuthor","Date","date","setDate","img","id","Modal","className","onClose","aria-labelledby","aria-describedby","root","noValidate","autoComplete","Input","onChange","e","target","value","label","defaultValue","variant","Button","size","color","onClick","Copyright","Typography","align","Link","href","getFullYear","themeX","createMuiTheme","type","useStyles","modal2","icon","marginRight","heroContent","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardContent","flexGrow","footer","BooksList","React","setOpen","openBook","setOpenBook","books","setBooks","bookDescription","setBookDescription","useEffect","a","axios","get","booksData","processingBooksData","data","fetchData","handleClickClose","Fragment","CssBaseline","AppBar","position","Toolbar","noWrap","Container","maxWidth","component","gutterBottom","paragraph","Grid","container","justify","item","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","fullWidth","DialogActions","map","bookDetail","xs","sm","md","Card","CardMedia","image","CardContent","CardActions","object","items","filter","alert","handleDelete","findIndex","el","handleOnCLickSave","normalize","expectedType","fallback","str","replace","toLowerCase","trim","split","word","toUpperCase","substring","join","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c5ea2c8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useState} from \"react\";\r\nimport {Modal} from \"@material-ui/core\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        display: 'flex',\r\n        height: 150,\r\n        width: 450,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2),\r\n\r\n    },\r\n\r\n}));\r\nexport const EditModal = ({open, book, onSave, onCancel}) => {\r\n    const classes = useStyles2();\r\n    const [title, setTitle] = useState(book.Title)\r\n    const [author, setAuthor] = useState(book.Author)\r\n    const [date, setDate] = useState(book.Date)\r\n    const [img, setImg] = useState(book.img)\r\n    const [id, setId] = useState(book.id)\r\n    const handleTitleChange = (e) => {\r\n        setTitle(e.target.value)\r\n    }\r\n    const handleAuthorChange = (e) => {\r\n        setAuthor(e.target.value)\r\n    }\r\n    const handleDateChange = (e) => {\r\n        setDate(e.target.value)\r\n    }\r\n    const onSaveClick = () => {\r\n        onSave({\r\n            id: id,\r\n            Author: author,\r\n            Date: date,\r\n            Title: title,\r\n            img: img,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            className={classes.modal}\r\n            open={open}\r\n            onClose={onCancel}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n        >\r\n            <div className={classes.paper}>\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <Input\r\n                        onChange={handleAuthorChange}\r\n                        label=\"Change Author\"\r\n                        defaultValue={author}\r\n                        variant=\"outlined\">\r\n                    </Input>\r\n                    <Input\r\n                        onChange={handleTitleChange}\r\n                        label=\"Change Title\"\r\n                        defaultValue={title}\r\n                        variant=\"outlined\">>\r\n                    </Input>\r\n                    <Input\r\n                        onChange={handleDateChange}\r\n                        label=\"Change Date\"\r\n                        defaultValue={date}\r\n                        variant=\"outlined\">>\r\n                    </Input>\r\n                </form>\r\n                <Button size=\"medium\" color=\"primary\" onClick={onSaveClick}>\r\n                    save\r\n                </Button>\r\n                <Button size=\"medium\" color=\"secondary\" onClick={onCancel}>\r\n                    cancel\r\n                </Button>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}","/*import BooksData from '../books/data/books_data.json'*/\nimport React, {useEffect} from 'react';\nimport {createMuiTheme, makeStyles, MuiThemeProvider} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {EditModal} from \"./EditModal\";\nimport axios from \"axios\";\n/*var express = require('express')\nvar cors = require('cors')\nvar app = express()\n\napp.use(cors())*/\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\n\nconst themeX = createMuiTheme({\n    palette: {\n        type: \"dark\",\n        background: {\n            paper: \"#222222\"\n        }\n    }\n});\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: '#000000'\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    modal2: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: \"#222222\"\n    },\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    heroContent: {\n        backgroundColor: \"#222222\",\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    paper: {\n        display: 'flex',\n        width: 150,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(1),\n\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '140%',\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    footer: {\n        backgroundColor: '#3c3c3c',\n        padding: theme.spacing(6),\n    },\n}));\n\nfunction BooksList() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [openBook, setOpenBook] = React.useState(false);\n    const [books, setBooks] = React.useState([]);\n    const [bookDescription, setBookDescription] = React.useState();\n\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const booksData = await axios.get('/data/books.json',\n\n            );\n            setBooks(processingBooksData(booksData.data));\n        };\n        fetchData();\n    }, []);\n\n    const handleOnCLickSave = (object) => {\n        let items = [...books];\n        items[items.findIndex(el => el.id === object.id)] = {...object}\n        setBooks(processingBooksData(items))\n        setBookDescription(object)\n    }\n\n    const handleClickOpen = () => {\n        setOpenBook(true);\n    };\n\n    const handleClickClose = () => {\n        setOpenBook(false);\n    };\n\n    const handleOpen = (editingBook) => {\n        setBookDescription(editingBook)\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleDelete = (object) => {\n        let items = [...books];\n        setBooks(processingBooksData(items.filter(data => data.id !== object.id)))\n        alert(`Book \"${object.Title}\" was deleted`)\n    }\n\n    return (\n        <React.Fragment>\n            <MuiThemeProvider theme={themeX}>\n                <CssBaseline/>\n                <AppBar position=\"relative\">\n                    <Toolbar>\n                        <LibraryBooksIcon className={classes.icon}/>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                            Books Library\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <main className={classes.root}>\n                    <div className={classes.heroContent}>\n                        <Container maxWidth=\"sm\">\n                            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                                Collection\n                            </Typography>\n                            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                                The best books of the whole time\n                            </Typography>\n                            <div className={classes.heroButtons}>\n                                <Grid container spacing={2} justify=\"center\">\n                                    <Grid item>\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                                            Add new book\n                                        </Button>\n                                        <Dialog open={openBook} onClose={handleClickClose}\n                                                aria-labelledby=\"form-dialog-title\">\n                                            <DialogTitle id=\"form-dialog-title\">Add book</DialogTitle>\n                                            <DialogContent>\n                                                <DialogContentText>\n                                                    To add new book to this website, please enter title, author and\n                                                    date\n                                                    here. We will send updates\n                                                    occasionally.\n                                                </DialogContentText>\n                                                <TextField\n                                                    autoFocus\n                                                    margin=\"dense\"\n                                                    id=\"name\"\n                                                    label=\"Title\"\n                                                    type=\"email\"\n                                                    fullWidth\n                                                />\n                                                <TextField\n                                                    margin=\"dense\"\n                                                    id=\"name\"\n                                                    label=\"Author\"\n                                                    type=\"email\"\n                                                    fullWidth\n                                                />\n                                                <TextField\n                                                    margin=\"dense\"\n                                                    id=\"name\"\n                                                    label=\"Date\"\n                                                    type=\"email\"\n                                                    fullWidth\n                                                />\n                                            </DialogContent>\n                                            <DialogActions>\n                                                <Button onClick={handleClickClose} color=\"primary\">\n                                                    Save\n                                                </Button>\n                                                <Button onClick={handleClickClose} color=\"secondary\">\n                                                    Cancel\n                                                </Button>\n                                            </DialogActions>\n                                        </Dialog>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Container>\n                    </div>\n                    <Container className={classes.cardGrid} maxWidth=\"md\">\n                        <Grid container spacing={4}>\n                            {books.map((bookDetail) => (\n                                <Grid item key={bookDetail.id} xs={12} sm={6} md={4}>\n                                    <Card className={classes.card}>\n                                        <CardMedia\n                                            className={classes.cardMedia}\n                                            image={bookDetail.img}\n                                            title=\"Image title\"\n                                        />\n                                        <CardContent className={classes.cardContent}>\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                {bookDetail.Author}\n                                            </Typography>\n                                            <Typography>\n                                                {bookDetail.Title}\n                                            </Typography>\n                                            <Typography>\n                                                {bookDetail.Date}\n                                            </Typography>\n                                        </CardContent>\n                                        <CardActions>\n                                            <Button size=\"small\" color=\"primary\">\n                                                View\n                                            </Button>\n                                            <Button size=\"small\" color=\"primary\" onClick={() => {\n                                                handleOpen(bookDetail)\n                                            }}>\n                                                Edit\n                                            </Button>\n                                            <Button size=\"small\" color=\"secondary\" onClick={() => {\n                                                handleDelete(bookDetail)\n                                            }}>\n                                                Delete\n                                            </Button>\n                                        </CardActions>\n                                    </Card>\n                                </Grid>\n                            ))}\n                            {open &&\n                            <EditModal open={open}\n                                       book={bookDescription}\n                                       onSave={(object) => handleOnCLickSave(object)}\n                                       onCancel={handleClose}/>\n                            }\n                        </Grid>\n                    </Container>\n                </main>\n                <footer className={classes.footer}>\n                    <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                        Footer\n                    </Typography>\n                    <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                        Reading books is cool!\n                    </Typography>\n                    <Copyright/>\n                </footer>\n            </MuiThemeProvider>\n        </React.Fragment>\n    )\n}\n\nexport default BooksList;\n\nconst processingBooksData = books => {\n    function trim_str(str) {\n        const regex = /[^a-zA-Z\\s]+/g;\n        return str.replace(regex, '').toLowerCase().trim().split(' ').map((word) => {\n            return word[0].toUpperCase() + word.substring(1);\n        }).join(\" \");\n    }\n\n    function normalize(value, expectedType, fallback = \"Unknown\") {\n        return typeof (value) === expectedType ? value : fallback;\n    }\n\n    return books.map(bookDetail => ({\n            id: normalize(bookDetail.id, \"number\"),\n            Author: normalize(bookDetail.Author, \"string\"),\n            Title: trim_str(normalize(bookDetail.Title, \"string\")),\n            Date: normalize(bookDetail.Date, \"number\"),\n            img: normalize(bookDetail.img, \"string\",\n                \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.pinclipart.com%2Fpicdir%2Fmiddle%2F169-1690579_book-icon-png-clip-art-transparent-download-book.png&f=1&nofb=1\"),\n\n        })\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport BooksList from \"./components/BooksList\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BooksList />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}